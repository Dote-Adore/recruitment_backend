/*
 * This file is generated by jOOQ.
 */
package com.doteadore.recruitment_backend.codegen.tables.daos;


import com.doteadore.recruitment_backend.codegen.tables.Education;
import com.doteadore.recruitment_backend.codegen.tables.records.EducationRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })

@Repository
public class EducationDao extends DAOImpl<EducationRecord, com.doteadore.recruitment_backend.codegen.tables.pojos.Education, Integer> {

    /**
     * Create a new EducationDao without any configuration
     */
    public EducationDao() {
        super(Education.EDUCATION, com.doteadore.recruitment_backend.codegen.tables.pojos.Education.class);
    }

    /**
     * Create a new EducationDao with an attached configuration
     */
    @Autowired
    public EducationDao(Configuration configuration) {
        super(Education.EDUCATION, com.doteadore.recruitment_backend.codegen.tables.pojos.Education.class, configuration);
    }

    @Override
    public Integer getId(com.doteadore.recruitment_backend.codegen.tables.pojos.Education object) {
        return object.getKey();
    }

    /**
     * Fetch records that have <code>key BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Education> fetchRangeOfKey(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Education.EDUCATION.KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>key IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Education> fetchByKey(Integer... values) {
        return fetch(Education.EDUCATION.KEY, values);
    }

    /**
     * Fetch a unique record that has <code>key = value</code>
     */
    public com.doteadore.recruitment_backend.codegen.tables.pojos.Education fetchOneByKey(Integer value) {
        return fetchOne(Education.EDUCATION.KEY, value);
    }

    /**
     * Fetch records that have <code>value BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Education> fetchRangeOfValue(String lowerInclusive, String upperInclusive) {
        return fetchRange(Education.EDUCATION.VALUE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>value IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Education> fetchByValue(String... values) {
        return fetch(Education.EDUCATION.VALUE, values);
    }
}
