/*
 * This file is generated by jOOQ.
 */
package com.doteadore.recruitment_backend.codegen.tables.records;


import com.doteadore.recruitment_backend.codegen.tables.Comment;
import com.doteadore.recruitment_backend.codegen.tables.interfaces.IComment;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentRecord extends UpdatableRecordImpl<CommentRecord> implements Record7<Integer, Integer, Integer, String, String, LocalDateTime, String>, IComment {

    private static final long serialVersionUID = -1713584275;

    /**
     * Setter for <code>Recruitment.Comment.id</code>.
     */
    @Override
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Recruitment.Comment.id</code>.
     */
    @Override
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Recruitment.Comment.jobOfferId</code>. 外键对应（JobOffer：id)
     */
    @Override
    public void setJobofferid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>Recruitment.Comment.jobOfferId</code>. 外键对应（JobOffer：id)
     */
    @Override
    public Integer getJobofferid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>Recruitment.Comment.accountType</code>. 1为企业，2为管理员，3为用户
     */
    @Override
    public void setAccounttype(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>Recruitment.Comment.accountType</code>. 1为企业，2为管理员，3为用户
     */
    @Override
    public Integer getAccounttype() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>Recruitment.Comment.accountId</code>. 评论者id 对应（UserAccount:account)
     */
    @Override
    public void setAccountid(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>Recruitment.Comment.accountId</code>. 评论者id 对应（UserAccount:account)
     */
    @Override
    public String getAccountid() {
        return (String) get(3);
    }

    /**
     * Setter for <code>Recruitment.Comment.responseId</code>. 回复者id 对应（UserAccount:account)
     */
    @Override
    public void setResponseid(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>Recruitment.Comment.responseId</code>. 回复者id 对应（UserAccount:account)
     */
    @Override
    public String getResponseid() {
        return (String) get(4);
    }

    /**
     * Setter for <code>Recruitment.Comment.time</code>. 评论或回复时间
     */
    @Override
    public void setTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>Recruitment.Comment.time</code>. 评论或回复时间
     */
    @Override
    public LocalDateTime getTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>Recruitment.Comment.content</code>. 评论或回复内容
     */
    @Override
    public void setContent(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>Recruitment.Comment.content</code>. 评论或回复内容
     */
    @Override
    public String getContent() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, Integer, String, String, LocalDateTime, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Integer, Integer, String, String, LocalDateTime, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Comment.COMMENT.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Comment.COMMENT.JOBOFFERID;
    }

    @Override
    public Field<Integer> field3() {
        return Comment.COMMENT.ACCOUNTTYPE;
    }

    @Override
    public Field<String> field4() {
        return Comment.COMMENT.ACCOUNTID;
    }

    @Override
    public Field<String> field5() {
        return Comment.COMMENT.RESPONSEID;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Comment.COMMENT.TIME;
    }

    @Override
    public Field<String> field7() {
        return Comment.COMMENT.CONTENT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getJobofferid();
    }

    @Override
    public Integer component3() {
        return getAccounttype();
    }

    @Override
    public String component4() {
        return getAccountid();
    }

    @Override
    public String component5() {
        return getResponseid();
    }

    @Override
    public LocalDateTime component6() {
        return getTime();
    }

    @Override
    public String component7() {
        return getContent();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getJobofferid();
    }

    @Override
    public Integer value3() {
        return getAccounttype();
    }

    @Override
    public String value4() {
        return getAccountid();
    }

    @Override
    public String value5() {
        return getResponseid();
    }

    @Override
    public LocalDateTime value6() {
        return getTime();
    }

    @Override
    public String value7() {
        return getContent();
    }

    @Override
    public CommentRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public CommentRecord value2(Integer value) {
        setJobofferid(value);
        return this;
    }

    @Override
    public CommentRecord value3(Integer value) {
        setAccounttype(value);
        return this;
    }

    @Override
    public CommentRecord value4(String value) {
        setAccountid(value);
        return this;
    }

    @Override
    public CommentRecord value5(String value) {
        setResponseid(value);
        return this;
    }

    @Override
    public CommentRecord value6(LocalDateTime value) {
        setTime(value);
        return this;
    }

    @Override
    public CommentRecord value7(String value) {
        setContent(value);
        return this;
    }

    @Override
    public CommentRecord values(Integer value1, Integer value2, Integer value3, String value4, String value5, LocalDateTime value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IComment from) {
        setId(from.getId());
        setJobofferid(from.getJobofferid());
        setAccounttype(from.getAccounttype());
        setAccountid(from.getAccountid());
        setResponseid(from.getResponseid());
        setTime(from.getTime());
        setContent(from.getContent());
    }

    @Override
    public <E extends IComment> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommentRecord
     */
    public CommentRecord() {
        super(Comment.COMMENT);
    }

    /**
     * Create a detached, initialised CommentRecord
     */
    public CommentRecord(Integer id, Integer jobofferid, Integer accounttype, String accountid, String responseid, LocalDateTime time, String content) {
        super(Comment.COMMENT);

        set(0, id);
        set(1, jobofferid);
        set(2, accounttype);
        set(3, accountid);
        set(4, responseid);
        set(5, time);
        set(6, content);
    }
}
