/*
 * This file is generated by jOOQ.
 */
package com.doteadore.recruitment_backend.codegen.tables.daos;


import com.doteadore.recruitment_backend.codegen.tables.Userdetailinfo;
import com.doteadore.recruitment_backend.codegen.tables.records.UserdetailinfoRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class UserdetailinfoDao extends DAOImpl<UserdetailinfoRecord, com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo, String> {

    /**
     * Create a new UserdetailinfoDao without any configuration
     */
    public UserdetailinfoDao() {
        super(Userdetailinfo.USERDETAILINFO, com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo.class);
    }

    /**
     * Create a new UserdetailinfoDao with an attached configuration
     */
    @Autowired
    public UserdetailinfoDao(Configuration configuration) {
        super(Userdetailinfo.USERDETAILINFO, com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo.class, configuration);
    }

    @Override
    public String getId(com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo object) {
        return object.getAccount();
    }

    /**
     * Fetch records that have <code>account BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo> fetchRangeOfAccount(String lowerInclusive, String upperInclusive) {
        return fetchRange(Userdetailinfo.USERDETAILINFO.ACCOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>account IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo> fetchByAccount(String... values) {
        return fetch(Userdetailinfo.USERDETAILINFO.ACCOUNT, values);
    }

    /**
     * Fetch a unique record that has <code>account = value</code>
     */
    public com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo fetchOneByAccount(String value) {
        return fetchOne(Userdetailinfo.USERDETAILINFO.ACCOUNT, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Userdetailinfo.USERDETAILINFO.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo> fetchByName(String... values) {
        return fetch(Userdetailinfo.USERDETAILINFO.NAME, values);
    }

    /**
     * Fetch records that have <code>sex BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo> fetchRangeOfSex(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Userdetailinfo.USERDETAILINFO.SEX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sex IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo> fetchBySex(Integer... values) {
        return fetch(Userdetailinfo.USERDETAILINFO.SEX, values);
    }

    /**
     * Fetch records that have <code>school BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo> fetchRangeOfSchool(String lowerInclusive, String upperInclusive) {
        return fetchRange(Userdetailinfo.USERDETAILINFO.SCHOOL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>school IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo> fetchBySchool(String... values) {
        return fetch(Userdetailinfo.USERDETAILINFO.SCHOOL, values);
    }

    /**
     * Fetch records that have <code>graduationYear BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo> fetchRangeOfGraduationyear(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Userdetailinfo.USERDETAILINFO.GRADUATIONYEAR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>graduationYear IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo> fetchByGraduationyear(Integer... values) {
        return fetch(Userdetailinfo.USERDETAILINFO.GRADUATIONYEAR, values);
    }

    /**
     * Fetch records that have <code>education BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo> fetchRangeOfEducation(String lowerInclusive, String upperInclusive) {
        return fetchRange(Userdetailinfo.USERDETAILINFO.EDUCATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>education IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo> fetchByEducation(String... values) {
        return fetch(Userdetailinfo.USERDETAILINFO.EDUCATION, values);
    }

    /**
     * Fetch records that have <code>tele BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo> fetchRangeOfTele(String lowerInclusive, String upperInclusive) {
        return fetchRange(Userdetailinfo.USERDETAILINFO.TELE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tele IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo> fetchByTele(String... values) {
        return fetch(Userdetailinfo.USERDETAILINFO.TELE, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(Userdetailinfo.USERDETAILINFO.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo> fetchByEmail(String... values) {
        return fetch(Userdetailinfo.USERDETAILINFO.EMAIL, values);
    }

    /**
     * Fetch records that have <code>city BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo> fetchRangeOfCity(String lowerInclusive, String upperInclusive) {
        return fetchRange(Userdetailinfo.USERDETAILINFO.CITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>city IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo> fetchByCity(String... values) {
        return fetch(Userdetailinfo.USERDETAILINFO.CITY, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Userdetailinfo.USERDETAILINFO.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Userdetailinfo> fetchByDescription(String... values) {
        return fetch(Userdetailinfo.USERDETAILINFO.DESCRIPTION, values);
    }
}
