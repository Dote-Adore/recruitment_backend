/*
 * This file is generated by jOOQ.
 */
package com.doteadore.recruitment_backend.codegen.tables.daos;


import com.doteadore.recruitment_backend.codegen.tables.Homepush;
import com.doteadore.recruitment_backend.codegen.tables.records.HomepushRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class HomepushDao extends DAOImpl<HomepushRecord, com.doteadore.recruitment_backend.codegen.tables.pojos.Homepush, Integer> {

    /**
     * Create a new HomepushDao without any configuration
     */
    public HomepushDao() {
        super(Homepush.HOMEPUSH, com.doteadore.recruitment_backend.codegen.tables.pojos.Homepush.class);
    }

    /**
     * Create a new HomepushDao with an attached configuration
     */
    @Autowired
    public HomepushDao(Configuration configuration) {
        super(Homepush.HOMEPUSH, com.doteadore.recruitment_backend.codegen.tables.pojos.Homepush.class, configuration);
    }

    @Override
    public Integer getId(com.doteadore.recruitment_backend.codegen.tables.pojos.Homepush object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Homepush> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Homepush.HOMEPUSH.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Homepush> fetchById(Integer... values) {
        return fetch(Homepush.HOMEPUSH.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.doteadore.recruitment_backend.codegen.tables.pojos.Homepush fetchOneById(Integer value) {
        return fetchOne(Homepush.HOMEPUSH.ID, value);
    }

    /**
     * Fetch records that have <code>jobOffer BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Homepush> fetchRangeOfJoboffer(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Homepush.HOMEPUSH.JOBOFFER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>jobOffer IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Homepush> fetchByJoboffer(Integer... values) {
        return fetch(Homepush.HOMEPUSH.JOBOFFER, values);
    }

    /**
     * Fetch records that have <code>handleAdminId BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Homepush> fetchRangeOfHandleadminid(String lowerInclusive, String upperInclusive) {
        return fetchRange(Homepush.HOMEPUSH.HANDLEADMINID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>handleAdminId IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Homepush> fetchByHandleadminid(String... values) {
        return fetch(Homepush.HOMEPUSH.HANDLEADMINID, values);
    }

    /**
     * Fetch records that have <code>priority BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Homepush> fetchRangeOfPriority(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Homepush.HOMEPUSH.PRIORITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>priority IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Homepush> fetchByPriority(Integer... values) {
        return fetch(Homepush.HOMEPUSH.PRIORITY, values);
    }

    /**
     * Fetch records that have <code>endtime BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Homepush> fetchRangeOfEndtime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Homepush.HOMEPUSH.ENDTIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>endtime IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Homepush> fetchByEndtime(LocalDateTime... values) {
        return fetch(Homepush.HOMEPUSH.ENDTIME, values);
    }
}
