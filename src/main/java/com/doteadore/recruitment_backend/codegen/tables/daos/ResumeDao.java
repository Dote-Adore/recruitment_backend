/*
 * This file is generated by jOOQ.
 */
package com.doteadore.recruitment_backend.codegen.tables.daos;


import com.doteadore.recruitment_backend.codegen.tables.Resume;
import com.doteadore.recruitment_backend.codegen.tables.records.ResumeRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ResumeDao extends DAOImpl<ResumeRecord, com.doteadore.recruitment_backend.codegen.tables.pojos.Resume, Integer> {

    /**
     * Create a new ResumeDao without any configuration
     */
    public ResumeDao() {
        super(Resume.RESUME, com.doteadore.recruitment_backend.codegen.tables.pojos.Resume.class);
    }

    /**
     * Create a new ResumeDao with an attached configuration
     */
    @Autowired
    public ResumeDao(Configuration configuration) {
        super(Resume.RESUME, com.doteadore.recruitment_backend.codegen.tables.pojos.Resume.class, configuration);
    }

    @Override
    public Integer getId(com.doteadore.recruitment_backend.codegen.tables.pojos.Resume object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Resume.RESUME.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchById(Integer... values) {
        return fetch(Resume.RESUME.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.doteadore.recruitment_backend.codegen.tables.pojos.Resume fetchOneById(Integer value) {
        return fetchOne(Resume.RESUME.ID, value);
    }

    /**
     * Fetch records that have <code>userid BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchRangeOfUserid(String lowerInclusive, String upperInclusive) {
        return fetchRange(Resume.RESUME.USERID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>userid IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchByUserid(String... values) {
        return fetch(Resume.RESUME.USERID, values);
    }

    /**
     * Fetch records that have <code>jobId BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchRangeOfJobid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Resume.RESUME.JOBID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>jobId IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchByJobid(Integer... values) {
        return fetch(Resume.RESUME.JOBID, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Resume.RESUME.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchByName(String... values) {
        return fetch(Resume.RESUME.NAME, values);
    }

    /**
     * Fetch records that have <code>sex BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchRangeOfSex(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Resume.RESUME.SEX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sex IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchBySex(Integer... values) {
        return fetch(Resume.RESUME.SEX, values);
    }

    /**
     * Fetch records that have <code>school BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchRangeOfSchool(String lowerInclusive, String upperInclusive) {
        return fetchRange(Resume.RESUME.SCHOOL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>school IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchBySchool(String... values) {
        return fetch(Resume.RESUME.SCHOOL, values);
    }

    /**
     * Fetch records that have <code>graduationYear BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchRangeOfGraduationyear(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Resume.RESUME.GRADUATIONYEAR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>graduationYear IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchByGraduationyear(Integer... values) {
        return fetch(Resume.RESUME.GRADUATIONYEAR, values);
    }

    /**
     * Fetch records that have <code>education BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchRangeOfEducation(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Resume.RESUME.EDUCATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>education IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchByEducation(Integer... values) {
        return fetch(Resume.RESUME.EDUCATION, values);
    }

    /**
     * Fetch records that have <code>city BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchRangeOfCity(String lowerInclusive, String upperInclusive) {
        return fetchRange(Resume.RESUME.CITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>city IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchByCity(String... values) {
        return fetch(Resume.RESUME.CITY, values);
    }

    /**
     * Fetch records that have <code>tele BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchRangeOfTele(String lowerInclusive, String upperInclusive) {
        return fetchRange(Resume.RESUME.TELE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tele IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchByTele(String... values) {
        return fetch(Resume.RESUME.TELE, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(Resume.RESUME.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchByEmail(String... values) {
        return fetch(Resume.RESUME.EMAIL, values);
    }

    /**
     * Fetch records that have <code>attatchmentUrl BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchRangeOfAttatchmenturl(String lowerInclusive, String upperInclusive) {
        return fetchRange(Resume.RESUME.ATTATCHMENTURL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>attatchmentUrl IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchByAttatchmenturl(String... values) {
        return fetch(Resume.RESUME.ATTATCHMENTURL, values);
    }

    /**
     * Fetch records that have <code>state BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchRangeOfState(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Resume.RESUME.STATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>state IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchByState(Integer... values) {
        return fetch(Resume.RESUME.STATE, values);
    }

    /**
     * Fetch records that have <code>isPassed BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchRangeOfIspassed(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Resume.RESUME.ISPASSED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>isPassed IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchByIspassed(Integer... values) {
        return fetch(Resume.RESUME.ISPASSED, values);
    }

    /**
     * Fetch records that have <code>stateTime BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchRangeOfStatetime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Resume.RESUME.STATETIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>stateTime IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchByStatetime(LocalDateTime... values) {
        return fetch(Resume.RESUME.STATETIME, values);
    }

    /**
     * Fetch records that have <code>postTime BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchRangeOfPosttime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Resume.RESUME.POSTTIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>postTime IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchByPosttime(LocalDateTime... values) {
        return fetch(Resume.RESUME.POSTTIME, values);
    }

    /**
     * Fetch records that have <code>companyID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchRangeOfCompanyid(String lowerInclusive, String upperInclusive) {
        return fetchRange(Resume.RESUME.COMPANYID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>companyID IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Resume> fetchByCompanyid(String... values) {
        return fetch(Resume.RESUME.COMPANYID, values);
    }
}
