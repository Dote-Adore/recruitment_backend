/*
 * This file is generated by jOOQ.
 */
package com.doteadore.recruitment_backend.codegen.tables.daos;


import com.doteadore.recruitment_backend.codegen.tables.Joboffer;
import com.doteadore.recruitment_backend.codegen.tables.records.JobofferRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class JobofferDao extends DAOImpl<JobofferRecord, com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer, Integer> {

    /**
     * Create a new JobofferDao without any configuration
     */
    public JobofferDao() {
        super(Joboffer.JOBOFFER, com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer.class);
    }

    /**
     * Create a new JobofferDao with an attached configuration
     */
    @Autowired
    public JobofferDao(Configuration configuration) {
        super(Joboffer.JOBOFFER, com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer.class, configuration);
    }

    @Override
    public Integer getId(com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Joboffer.JOBOFFER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer> fetchById(Integer... values) {
        return fetch(Joboffer.JOBOFFER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer fetchOneById(Integer value) {
        return fetchOne(Joboffer.JOBOFFER.ID, value);
    }

    /**
     * Fetch records that have <code>company BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer> fetchRangeOfCompany(String lowerInclusive, String upperInclusive) {
        return fetchRange(Joboffer.JOBOFFER.COMPANY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>company IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer> fetchByCompany(String... values) {
        return fetch(Joboffer.JOBOFFER.COMPANY, values);
    }

    /**
     * Fetch records that have <code>professionType BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer> fetchRangeOfProfessiontype(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Joboffer.JOBOFFER.PROFESSIONTYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>professionType IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer> fetchByProfessiontype(Integer... values) {
        return fetch(Joboffer.JOBOFFER.PROFESSIONTYPE, values);
    }

    /**
     * Fetch records that have <code>title BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer> fetchRangeOfTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(Joboffer.JOBOFFER.TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer> fetchByTitle(String... values) {
        return fetch(Joboffer.JOBOFFER.TITLE, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Joboffer.JOBOFFER.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer> fetchByDescription(String... values) {
        return fetch(Joboffer.JOBOFFER.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>isDeleted BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer> fetchRangeOfIsdeleted(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Joboffer.JOBOFFER.ISDELETED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>isDeleted IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer> fetchByIsdeleted(Integer... values) {
        return fetch(Joboffer.JOBOFFER.ISDELETED, values);
    }

    /**
     * Fetch records that have <code>startTime BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer> fetchRangeOfStarttime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Joboffer.JOBOFFER.STARTTIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>startTime IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer> fetchByStarttime(LocalDateTime... values) {
        return fetch(Joboffer.JOBOFFER.STARTTIME, values);
    }

    /**
     * Fetch records that have <code>city BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer> fetchRangeOfCity(String lowerInclusive, String upperInclusive) {
        return fetchRange(Joboffer.JOBOFFER.CITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>city IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer> fetchByCity(String... values) {
        return fetch(Joboffer.JOBOFFER.CITY, values);
    }

    /**
     * Fetch records that have <code>endTime BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer> fetchRangeOfEndtime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Joboffer.JOBOFFER.ENDTIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>endTime IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer> fetchByEndtime(LocalDateTime... values) {
        return fetch(Joboffer.JOBOFFER.ENDTIME, values);
    }

    /**
     * Fetch records that have <code>position BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer> fetchRangeOfPosition(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Joboffer.JOBOFFER.POSITION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>position IN (values)</code>
     */
    public List<com.doteadore.recruitment_backend.codegen.tables.pojos.Joboffer> fetchByPosition(Integer... values) {
        return fetch(Joboffer.JOBOFFER.POSITION, values);
    }
}
